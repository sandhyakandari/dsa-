class Solution {
  class pair{
	 Node root; int state;
	 pair(Node root,int state){
		 this.root=root;
		 this.state=state;
	 }
 }
	public void preorderTraversal(Node root) {
		//Write your code here
		ArrayList<Integer>pre=new ArrayList<>();
		ArrayList<Integer>in=new ArrayList<>();
		ArrayList<Integer>post=new ArrayList<>();
		Stack<pair>st=new Stack<>();
		st.push(new pair(root,1));
		while(st.size()>0){
         pair ne=st.peek();
			if(ne.state==1){
			pre.add(ne.root.data);
				ne.state++;
				if(ne.root.left!=null){
					st.push(new pair(ne.root.left,1));      }}
			else if(ne.state==2){
				in.add(ne.root.data);
				ne.state++;
				if(ne.root.right!=null){ st.push(new pair(ne.root.right,1));}
			}
			else{ post.add(ne.root.data);
				st.pop();}
				}
	System.out.println(pre);
		System.out.println(in);
		System.out.println(post);
	}}