import java.io.*;
import java.util.*;

class Main {
    public static void main(String args[]) throws IOException {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        ArrayList<ArrayList<Integer>> Edges = new ArrayList<ArrayList<Integer>>();
        for (int i = 0; i < M; i++) {
            ArrayList<Integer> e = new ArrayList<Integer>();
            e.add(sc.nextInt());
            e.add(sc.nextInt());
            Edges.add(e);
        }
        int U=sc.nextInt();
        int V=sc.nextInt();
        Solution ob = new Solution();
        if (ob.check(N, M, Edges,U,V)) {
            System.out.println(1);
        } else {
            System.out.println(0);
        }
        sc.close();
    }

}

class Solution {
    
    boolean check(int N, int M, ArrayList<ArrayList<Integer>> Edges,int U,int V) {
        // your code here
		boolean vis[]=new boolean[N+1];
		ArrayList<ArrayList<Integer>>ar=new ArrayList<>();
		for(int i=0;i<=N;i++){
		   ar.add(new ArrayList<Integer>());
		}
		for(List<Integer>ed:Edges){
			int u=ed.get(0);
			int v=ed.get(1);
			ar.get(u).add(v);
			ar.get(v).add(u);
		}
		boolean p=path(ar,U,V,vis);
       return p;
    }
	boolean path(ArrayList<ArrayList<Integer>>Edges,int s,int d,boolean vis[]){
	if(s==d){ return true;}
		vis[s]=true;
		for(int nbr: Edges.get(s)){
			if(vis[nbr]==false){
			boolean h=path(Edges,nbr,d,vis);
				if(h==true){
					return true;
				}
			}
		}
		return false;
	}
}