class Solution { 
    public void dfs(int i,int j,char[][]grid,boolean vis[][]){
        if(i<0 || j<0 || i==grid.length || j==grid[i].length || grid[i][j]=='0' || vis[i][j]==true ){ return ;}

   vis[i][j]=true;
   dfs(i,j+1,grid,vis);
   dfs(i,j-1,grid,vis);
   dfs(i+1,j,grid,vis);
   dfs(i-1,j,grid,vis);
    }
    public int numIslands(char[][] grid) {
        int n=grid.length;
        int m=grid[0].length;
        int c=0; boolean vis[][]=new boolean[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(vis[i][j]==false && grid[i][j]=='1'){
                    c++;
                    dfs(i,j,grid,vis);
                }
            }
        }
    return c;}
}